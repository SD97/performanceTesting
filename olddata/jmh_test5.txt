> Task :javaPerf:compileJava UP-TO-DATE
> Task :javaPerf:processResources NO-SOURCE
> Task :javaPerf:classes UP-TO-DATE
> Task :javaPerf:compileTestJava UP-TO-DATE
> Task :javaPerf:processTestResources NO-SOURCE
> Task :javaPerf:testClasses UP-TO-DATE
> Task :javaPerf:compileJmhJava UP-TO-DATE
> Task :javaPerf:processJmhResources NO-SOURCE
> Task :javaPerf:jmhClasses UP-TO-DATE
> Task :javaPerf:jmhRunBytecodeGenerator UP-TO-DATE
> Task :javaPerf:jmhCompileGeneratedClasses UP-TO-DATE
> Task :javaPerf:jmhJar UP-TO-DATE

> Task :javaPerf:jmh
# JMH version: 1.35
# VM version: JDK 17.0.4, OpenJDK 64-Bit Server VM, 17.0.4+8-Ubuntu-120.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: --enable-preview --add-modules jdk.incubator.vector -Xmx16000M -XX:NewSize=8G
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 10 s each
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: blackScholes.TestJavaPerf.testScalarPerformance
# Parameters: (arraySize = 2560000)

# Run progress: 0.00% complete, ETA 00:06:00
# Fork: 1 of 2
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 11.668 ops/s
# Warmup Iteration   2: 11.563 ops/s
# Warmup Iteration   3: 11.648 ops/s
Iteration   1: 11.592 ops/s
                 ·gc.alloc.rate:      0.599 MB/sec
                 ·gc.alloc.rate.norm: 56876.414 B/op
                 ·gc.count:           ≈ 0 counts
                 ·stack:              <delayed till summary>

Iteration   2: 11.571 ops/s
                 ·gc.alloc.rate:      0.598 MB/sec
                 ·gc.alloc.rate.norm: 56942.828 B/op
                 ·gc.count:           ≈ 0 counts
                 ·stack:              <delayed till summary>

Iteration   3: 11.580 ops/s
                 ·gc.alloc.rate:      0.568 MB/sec
                 ·gc.alloc.rate.norm: 54015.241 B/op
                 ·gc.count:           ≈ 0 counts
                 ·stack:              <delayed till summary>

# Processing profiler results: LinuxPerfProfiler 

# Run progress: 16.67% complete, ETA 00:05:17
# Fork: 2 of 2
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 11.686 ops/s
# Warmup Iteration   2: 11.719 ops/s
# Warmup Iteration   3: 11.697 ops/s
Iteration   1: 11.542 ops/s
                 ·gc.alloc.rate:      0.599 MB/sec
                 ·gc.alloc.rate.norm: 57106.207 B/op
                 ·gc.count:           ≈ 0 counts
                 ·stack:              <delayed till summary>

Iteration   2: 11.545 ops/s
                 ·gc.alloc.rate:      0.598 MB/sec
                 ·gc.alloc.rate.norm: 57052.966 B/op
                 ·gc.count:           ≈ 0 counts
                 ·stack:              <delayed till summary>

Iteration   3: 11.545 ops/s
                 ·gc.alloc.rate:      0.568 MB/sec
                 ·gc.alloc.rate.norm: 54160.276 B/op
                 ·gc.count:           ≈ 0 counts
                 ·stack:              <delayed till summary>

# Processing profiler results: LinuxPerfProfiler 


Result "blackScholes.TestJavaPerf.testScalarPerformance":
  11.563 ±(99.9%) 0.060 ops/s [Average]
  (min, avg, max) = (11.542, 11.563, 11.592), stdev = 0.021
  CI (99.9%): [11.503, 11.623] (assumes normal distribution)

Secondary result "blackScholes.TestJavaPerf.testScalarPerformance:·gc.alloc.rate":
  0.588 ±(99.9%) 0.044 MB/sec [Average]
  (min, avg, max) = (0.568, 0.588, 0.599), stdev = 0.016
  CI (99.9%): [0.544, 0.633] (assumes normal distribution)

Secondary result "blackScholes.TestJavaPerf.testScalarPerformance:·gc.alloc.rate.norm":
  56025.655 ±(99.9%) 4217.362 B/op [Average]
  (min, avg, max) = (54015.241, 56025.655, 57106.207), stdev = 1503.952
  CI (99.9%): [51808.293, 60243.017] (assumes normal distribution)

Secondary result "blackScholes.TestJavaPerf.testScalarPerformance:·gc.count":
  ≈ 0 counts

Secondary result "blackScholes.TestJavaPerf.testScalarPerformance:·perf":
Perf stats:
--------------------------------------------------

          31015.04 msec task-clock:u              #    0.488 CPUs utilized          
                 0      context-switches:u        #    0.000 K/sec                  
                 0      cpu-migrations:u          #    0.000 K/sec                  
              3195      page-faults:u             #    0.103 K/sec                  
      139034698077      cycles:u                  #    4.483 GHz                      (40.39%)
          68288663      stalled-cycles-frontend:u #    0.05% frontend cycles idle     (40.51%)
          35000313      stalled-cycles-backend:u  #    0.03% backend cycles idle      (40.59%)
      353111269805      instructions:u            #    2.54  insn per cycle         
                                                  #    0.00  stalled cycles per insn  (40.68%)
       22489909538      branches:u                #  725.129 M/sec                    (40.68%)
           9632157      branch-misses:u           #    0.04% of all branches          (40.56%)
       90285996779      L1-dcache-loads:u         # 2911.039 M/sec                    (40.38%)
         880343977      L1-dcache-load-misses:u   #    0.98% of all L1-dcache accesses  (40.32%)
   <not supported>      LLC-loads:u                                                 
   <not supported>      LLC-load-misses:u                                           
         196383971      L1-icache-loads:u         #    6.332 M/sec                    (39.99%)
           1224168      L1-icache-load-misses:u   #    0.62% of all L1-icache accesses  (39.86%)
           9575502      dTLB-loads:u              #    0.309 M/sec                    (39.70%)
           6432182      dTLB-load-misses:u        #   67.17% of all dTLB cache accesses  (39.78%)
            978251      iTLB-loads:u              #    0.032 M/sec                    (39.97%)
           1464135      iTLB-load-misses:u        #  149.67% of all iTLB cache accesses  (40.13%)
         856568319      L1-dcache-prefetches:u    #   27.618 M/sec                    (40.35%)
   <not supported>      L1-dcache-prefetch-misses:u                                   

      63.540947287 seconds time elapsed

      60.750001000 seconds user
       1.084497000 seconds sys



          31026.08 msec task-clock:u              #    0.488 CPUs utilized          
                 0      context-switches:u        #    0.000 K/sec                  
                 0      cpu-migrations:u          #    0.000 K/sec                  
              3237      page-faults:u             #    0.104 K/sec                  
      139634592471      cycles:u                  #    4.501 GHz                      (39.84%)
          46463188      stalled-cycles-frontend:u #    0.03% frontend cycles idle     (39.96%)
          41150734      stalled-cycles-backend:u  #    0.03% backend cycles idle      (40.22%)
      353821725545      instructions:u            #    2.53  insn per cycle         
                                                  #    0.00  stalled cycles per insn  (40.45%)
       22379947857      branches:u                #  721.327 M/sec                    (40.99%)
          11480268      branch-misses:u           #    0.05% of all branches          (41.06%)
       89394563169      L1-dcache-loads:u         # 2881.272 M/sec                    (40.85%)
         883074102      L1-dcache-load-misses:u   #    0.99% of all L1-dcache accesses  (40.74%)
   <not supported>      LLC-loads:u                                                 
   <not supported>      LLC-load-misses:u                                           
         213219378      L1-icache-loads:u         #    6.872 M/sec                    (40.54%)
           1409974      L1-icache-load-misses:u   #    0.66% of all L1-icache accesses  (40.41%)
          10597114      dTLB-loads:u              #    0.342 M/sec                    (40.15%)
           6324667      dTLB-load-misses:u        #   59.68% of all dTLB cache accesses  (40.02%)
            961064      iTLB-loads:u              #    0.031 M/sec                    (39.83%)
           1135244      iTLB-load-misses:u        #  118.12% of all iTLB cache accesses  (39.67%)
         858656738      L1-dcache-prefetches:u    #   27.675 M/sec                    (39.65%)
   <not supported>      L1-dcache-prefetch-misses:u                                   

      63.542138468 seconds time elapsed

      60.770407000 seconds user
       1.064075000 seconds sys



Secondary result "blackScholes.TestJavaPerf.testScalarPerformance:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
 50.1%         RUNNABLE
 48.6%         TIMED_WAITING
  1.2%         WAITING

....[Thread state: RUNNABLE]........................................................................
 25.7%  51.2% <stack is empty, everything is filtered?>
 24.4%  48.8% blackScholes.TestJavaPerf.testScalarPerformance
  0.0%   0.0% jdk.internal.misc.Unsafe.unpark

....[Thread state: TIMED_WAITING]...................................................................
 25.7%  52.8% java.lang.Object.wait
 22.9%  47.2% jdk.internal.misc.Unsafe.park

....[Thread state: WAITING].........................................................................
  1.2% 100.0% jdk.internal.misc.Unsafe.park



# JMH version: 1.35
# VM version: JDK 17.0.4, OpenJDK 64-Bit Server VM, 17.0.4+8-Ubuntu-120.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: --enable-preview --add-modules jdk.incubator.vector -Xmx16000M -XX:NewSize=8G
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 10 s each
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: blackScholes.TestJavaPerf.testScalarPerformanceNoInline
# Parameters: (arraySize = 2560000)

# Run progress: 33.33% complete, ETA 00:04:14
# Fork: 1 of 2
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 11.686 ops/s
# Warmup Iteration   2: 11.689 ops/s
# Warmup Iteration   3: 11.670 ops/s
Iteration   1: 11.550 ops/s
                 ·gc.alloc.rate:      0.599 MB/sec
                 ·gc.alloc.rate.norm: 57118.414 B/op
                 ·gc.count:           ≈ 0 counts
                 ·stack:              <delayed till summary>

Iteration   2: 11.571 ops/s
                 ·gc.alloc.rate:      0.599 MB/sec
                 ·gc.alloc.rate.norm: 56947.931 B/op
                 ·gc.count:           ≈ 0 counts
                 ·stack:              <delayed till summary>

Iteration   3: 11.561 ops/s
                 ·gc.alloc.rate:      0.569 MB/sec
                 ·gc.alloc.rate.norm: 54182.483 B/op
                 ·gc.count:           ≈ 0 counts
                 ·stack:              <delayed till summary>

# Processing profiler results: LinuxPerfProfiler 

# Run progress: 50.00% complete, ETA 00:03:10
# Fork: 2 of 2
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 11.660 ops/s
# Warmup Iteration   2: 11.684 ops/s
# Warmup Iteration   3: 11.648 ops/s
Iteration   1: 11.538 ops/s
                 ·gc.alloc.rate:      0.599 MB/sec
                 ·gc.alloc.rate.norm: 57172.345 B/op
                 ·gc.count:           ≈ 0 counts
                 ·stack:              <delayed till summary>

Iteration   2: 11.588 ops/s
                 ·gc.alloc.rate:      0.599 MB/sec
                 ·gc.alloc.rate.norm: 56946.069 B/op
                 ·gc.count:           ≈ 0 counts
                 ·stack:              <delayed till summary>

Iteration   3: 11.586 ops/s
                 ·gc.alloc.rate:      0.569 MB/sec
                 ·gc.alloc.rate.norm: 54112.759 B/op
                 ·gc.count:           ≈ 0 counts
                 ·stack:              <delayed till summary>

# Processing profiler results: LinuxPerfProfiler 


Result "blackScholes.TestJavaPerf.testScalarPerformanceNoInline":
  11.566 ±(99.9%) 0.055 ops/s [Average]
  (min, avg, max) = (11.538, 11.566, 11.588), stdev = 0.020
  CI (99.9%): [11.511, 11.621] (assumes normal distribution)

Secondary result "blackScholes.TestJavaPerf.testScalarPerformanceNoInline:·gc.alloc.rate":
  0.589 ±(99.9%) 0.043 MB/sec [Average]
  (min, avg, max) = (0.569, 0.589, 0.599), stdev = 0.015
  CI (99.9%): [0.546, 0.632] (assumes normal distribution)

Secondary result "blackScholes.TestJavaPerf.testScalarPerformanceNoInline:·gc.alloc.rate.norm":
  56080.000 ±(99.9%) 4205.441 B/op [Average]
  (min, avg, max) = (54112.759, 56080.000, 57172.345), stdev = 1499.701
  CI (99.9%): [51874.559, 60285.441] (assumes normal distribution)

Secondary result "blackScholes.TestJavaPerf.testScalarPerformanceNoInline:·gc.count":
  ≈ 0 counts

Secondary result "blackScholes.TestJavaPerf.testScalarPerformanceNoInline:·perf":
Perf stats:
--------------------------------------------------

          31013.80 msec task-clock:u              #    0.488 CPUs utilized          
                 0      context-switches:u        #    0.000 K/sec                  
                 0      cpu-migrations:u          #    0.000 K/sec                  
              3202      page-faults:u             #    0.103 K/sec                  
      139585658307      cycles:u                  #    4.501 GHz                      (39.67%)
          54561968      stalled-cycles-frontend:u #    0.04% frontend cycles idle     (40.02%)
          33385771      stalled-cycles-backend:u  #    0.02% backend cycles idle      (40.18%)
      351716637639      instructions:u            #    2.52  insn per cycle         
                                                  #    0.00  stalled cycles per insn  (40.46%)
       22378916781      branches:u                #  721.579 M/sec                    (40.83%)
          10401838      branch-misses:u           #    0.05% of all branches          (40.81%)
       89290354493      L1-dcache-loads:u         # 2879.052 M/sec                    (41.00%)
         882294117      L1-dcache-load-misses:u   #    0.99% of all L1-dcache accesses  (40.45%)
   <not supported>      LLC-loads:u                                                 
   <not supported>      LLC-load-misses:u                                           
         195658653      L1-icache-loads:u         #    6.309 M/sec                    (40.40%)
           1705608      L1-icache-load-misses:u   #    0.87% of all L1-icache accesses  (40.72%)
          11144919      dTLB-loads:u              #    0.359 M/sec                    (40.47%)
           6852754      dTLB-load-misses:u        #   61.49% of all dTLB cache accesses  (40.38%)
           1118872      iTLB-loads:u              #    0.036 M/sec                    (40.00%)
           1631503      iTLB-load-misses:u        #  145.82% of all iTLB cache accesses  (39.79%)
         857324773      L1-dcache-prefetches:u    #   27.643 M/sec                    (39.79%)
   <not supported>      L1-dcache-prefetch-misses:u                                   

      63.534126335 seconds time elapsed

      60.856582000 seconds user
       0.983050000 seconds sys



          30959.68 msec task-clock:u              #    0.488 CPUs utilized          
                 0      context-switches:u        #    0.000 K/sec                  
                 0      cpu-migrations:u          #    0.000 K/sec                  
              3181      page-faults:u             #    0.103 K/sec                  
      138403994233      cycles:u                  #    4.470 GHz                      (40.15%)
          48968181      stalled-cycles-frontend:u #    0.04% frontend cycles idle     (40.28%)
          37512854      stalled-cycles-backend:u  #    0.03% backend cycles idle      (40.48%)
      351604104886      instructions:u            #    2.54  insn per cycle         
                                                  #    0.00  stalled cycles per insn  (40.41%)
       22457603809      branches:u                #  725.382 M/sec                    (40.52%)
          10080225      branch-misses:u           #    0.04% of all branches          (40.68%)
       89696259406      L1-dcache-loads:u         # 2897.196 M/sec                    (40.73%)
         877196927      L1-dcache-load-misses:u   #    0.98% of all L1-dcache accesses  (40.40%)
   <not supported>      LLC-loads:u                                                 
   <not supported>      LLC-load-misses:u                                           
         211127629      L1-icache-loads:u         #    6.819 M/sec                    (40.48%)
           1331468      L1-icache-load-misses:u   #    0.63% of all L1-icache accesses  (40.48%)
          10927448      dTLB-loads:u              #    0.353 M/sec                    (40.38%)
           7003107      dTLB-load-misses:u        #   64.09% of all dTLB cache accesses  (40.24%)
           1102238      iTLB-loads:u              #    0.036 M/sec                    (39.79%)
           1304329      iTLB-load-misses:u        #  118.33% of all iTLB cache accesses  (39.92%)
         857521416      L1-dcache-prefetches:u    #   27.698 M/sec                    (39.82%)
   <not supported>      L1-dcache-prefetch-misses:u                                   

      63.482666914 seconds time elapsed

      60.726970000 seconds user
       1.013162000 seconds sys



Secondary result "blackScholes.TestJavaPerf.testScalarPerformanceNoInline:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
 50.1%         RUNNABLE
 48.6%         TIMED_WAITING
  1.2%         WAITING

....[Thread state: RUNNABLE]........................................................................
 25.7%  51.2% <stack is empty, everything is filtered?>
 24.5%  48.8% blackScholes.TestJavaPerf.testScalarPerformanceNoInline
  0.0%   0.0% java.lang.System.nanoTime

....[Thread state: TIMED_WAITING]...................................................................
 25.7%  52.8% java.lang.Object.wait
 22.9%  47.2% jdk.internal.misc.Unsafe.park

....[Thread state: WAITING].........................................................................
  1.2% 100.0% jdk.internal.misc.Unsafe.park



# JMH version: 1.35
# VM version: JDK 17.0.4, OpenJDK 64-Bit Server VM, 17.0.4+8-Ubuntu-120.04
# VM invoker: /usr/lib/jvm/java-17-openjdk-amd64/bin/java
# VM options: --enable-preview --add-modules jdk.incubator.vector -Xmx16000M -XX:NewSize=8G
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 10 s each
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: blackScholes.TestJavaPerf.testVectorPerformance
# Parameters: (arraySize = 2560000)

# Run progress: 66.67% complete, ETA 00:02:07
# Fork: 1 of 2
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 9.329 ops/s
# Warmup Iteration   2: 9.389 ops/s
# Warmup Iteration   3: 7.174 ops/s
Iteration   1: 7.051 ops/s
                 ·gc.alloc.rate:                   4559.544 MB/sec
                 ·gc.alloc.rate.norm:              711775149.746 B/op
                 ·gc.churn.G1_Eden_Space:          4495.693 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     701807486.197 B/op
                 ·gc.churn.G1_Survivor_Space:      0.010 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 1569.803 B/op
                 ·gc.count:                        6.000 counts
                 ·gc.time:                         15.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 7.030 ops/s
                 ·gc.alloc.rate:                   4546.801 MB/sec
                 ·gc.alloc.rate.norm:              711775394.254 B/op
                 ·gc.churn.G1_Eden_Space:          4483.126 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     701807486.197 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 263.211 B/op
                 ·gc.count:                        6.000 counts
                 ·gc.time:                         14.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 6.689 ops/s
                 ·gc.alloc.rate:                   4324.636 MB/sec
                 ·gc.alloc.rate.norm:              711774589.970 B/op
                 ·gc.churn.G1_Eden_Space:          4518.649 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     743706440.597 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 123.224 B/op
                 ·gc.count:                        6.000 counts
                 ·gc.time:                         15.000 ms
                 ·stack:                           <delayed till summary>

# Processing profiler results: LinuxPerfProfiler 

# Run progress: 83.33% complete, ETA 00:01:03
# Fork: 2 of 2
# Preparing profilers: LinuxPerfProfiler 
# Profilers consume stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 9.436 ops/s
# Warmup Iteration   2: 9.325 ops/s
# Warmup Iteration   3: 6.851 ops/s
Iteration   1: 6.779 ops/s
                 ·gc.alloc.rate:                   4383.040 MB/sec
                 ·gc.alloc.rate.norm:              711779031.765 B/op
                 ·gc.churn.G1_Eden_Space:          4557.876 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     740171294.118 B/op
                 ·gc.churn.G1_Survivor_Space:      0.009 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 1517.647 B/op
                 ·gc.count:                        6.000 counts
                 ·gc.time:                         13.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 6.187 ops/s
                 ·gc.alloc.rate:                   4002.657 MB/sec
                 ·gc.alloc.rate.norm:              711787239.238 B/op
                 ·gc.churn.G1_Eden_Space:          3743.843 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     665762539.683 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 319.238 B/op
                 ·gc.count:                        5.000 counts
                 ·gc.time:                         12.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 5.799 ops/s
                 ·gc.alloc.rate:                   3748.922 MB/sec
                 ·gc.alloc.rate.norm:              711785675.034 B/op
                 ·gc.churn.G1_Eden_Space:          3808.808 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     723155862.069 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 142.345 B/op
                 ·gc.count:                        5.000 counts
                 ·gc.time:                         13.000 ms
                 ·stack:                           <delayed till summary>

# Processing profiler results: LinuxPerfProfiler 


Result "blackScholes.TestJavaPerf.testVectorPerformance":
  6.589 ±(99.9%) 1.396 ops/s [Average]
  (min, avg, max) = (5.799, 6.589, 7.051), stdev = 0.498
  CI (99.9%): [5.193, 7.986] (assumes normal distribution)

Secondary result "blackScholes.TestJavaPerf.testVectorPerformance:·gc.alloc.rate":
  4260.934 ±(99.9%) 903.208 MB/sec [Average]
  (min, avg, max) = (3748.922, 4260.934, 4559.544), stdev = 322.093
  CI (99.9%): [3357.725, 5164.142] (assumes normal distribution)

Secondary result "blackScholes.TestJavaPerf.testVectorPerformance:·gc.alloc.rate.norm":
  711779513.335 ±(99.9%) 15770.168 B/op [Average]
  (min, avg, max) = (711774589.970, 711779513.335, 711787239.238), stdev = 5623.794
  CI (99.9%): [711763743.166, 711795283.503] (assumes normal distribution)

Secondary result "blackScholes.TestJavaPerf.testVectorPerformance:·gc.churn.G1_Eden_Space":
  4267.999 ±(99.9%) 1071.900 MB/sec [Average]
  (min, avg, max) = (3743.843, 4267.999, 4557.876), stdev = 382.250
  CI (99.9%): [3196.099, 5339.899] (assumes normal distribution)

Secondary result "blackScholes.TestJavaPerf.testVectorPerformance:·gc.churn.G1_Eden_Space.norm":
  712735184.810 ±(99.9%) 81907293.053 B/op [Average]
  (min, avg, max) = (665762539.683, 712735184.810, 743706440.597), stdev = 29208929.723
  CI (99.9%): [630827891.757, 794642477.863] (assumes normal distribution)

Secondary result "blackScholes.TestJavaPerf.testVectorPerformance:·gc.churn.G1_Survivor_Space":
  0.004 ±(99.9%) 0.012 MB/sec [Average]
  (min, avg, max) = (0.001, 0.004, 0.010), stdev = 0.004
  CI (99.9%): [≈ 0, 0.016] (assumes normal distribution)

Secondary result "blackScholes.TestJavaPerf.testVectorPerformance:·gc.churn.G1_Survivor_Space.norm":
  655.911 ±(99.9%) 1939.903 B/op [Average]
  (min, avg, max) = (123.224, 655.911, 1569.803), stdev = 691.788
  CI (99.9%): [≈ 0, 2595.815] (assumes normal distribution)

Secondary result "blackScholes.TestJavaPerf.testVectorPerformance:·gc.count":
  34.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (5.000, 5.667, 6.000), stdev = 0.516
  CI (99.9%): [34.000, 34.000] (assumes normal distribution)

Secondary result "blackScholes.TestJavaPerf.testVectorPerformance:·gc.time":
  82.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (12.000, 13.667, 15.000), stdev = 1.211
  CI (99.9%): [82.000, 82.000] (assumes normal distribution)

Secondary result "blackScholes.TestJavaPerf.testVectorPerformance:·perf":
Perf stats:
--------------------------------------------------

          32757.12 msec task-clock:u              #    0.515 CPUs utilized          
                 0      context-switches:u        #    0.000 K/sec                  
                 0      cpu-migrations:u          #    0.000 K/sec                  
               213      page-faults:u             #    0.007 K/sec                  
      139378127991      cycles:u                  #    4.255 GHz                      (39.21%)
         404648698      stalled-cycles-frontend:u #    0.29% frontend cycles idle     (40.98%)
        2167919970      stalled-cycles-backend:u  #    1.56% backend cycles idle      (41.70%)
      161427378019      instructions:u            #    1.16  insn per cycle         
                                                  #    0.01  stalled cycles per insn  (42.48%)
       13233076260      branches:u                #  403.976 M/sec                    (42.67%)
          15872369      branch-misses:u           #    0.12% of all branches          (43.36%)
       71172844019      L1-dcache-loads:u         # 2172.744 M/sec                    (43.06%)
        3647270994      L1-dcache-load-misses:u   #    5.12% of all L1-dcache accesses  (42.27%)
   <not supported>      LLC-loads:u                                                 
   <not supported>      LLC-load-misses:u                                           
        1811027065      L1-icache-loads:u         #   55.287 M/sec                    (41.63%)
           4391159      L1-icache-load-misses:u   #    0.24% of all L1-icache accesses  (40.91%)
          53913957      dTLB-loads:u              #    1.646 M/sec                    (40.58%)
          43339314      dTLB-load-misses:u        #   80.39% of all dTLB cache accesses  (39.53%)
           3676924      iTLB-loads:u              #    0.112 M/sec                    (38.77%)
           1815700      iTLB-load-misses:u        #   49.38% of all iTLB cache accesses  (38.62%)
        3568810285      L1-dcache-prefetches:u    #  108.948 M/sec                    (38.41%)
   <not supported>      L1-dcache-prefetch-misses:u                                   

      63.643025016 seconds time elapsed

      74.515814000 seconds user
       6.240684000 seconds sys



          33023.17 msec task-clock:u              #    0.518 CPUs utilized          
                 0      context-switches:u        #    0.000 K/sec                  
                 0      cpu-migrations:u          #    0.000 K/sec                  
               207      page-faults:u             #    0.006 K/sec                  
      137033084251      cycles:u                  #    4.150 GHz                      (39.63%)
         481019837      stalled-cycles-frontend:u #    0.35% frontend cycles idle     (40.80%)
        3002287851      stalled-cycles-backend:u  #    2.19% backend cycles idle      (41.79%)
      145048155654      instructions:u            #    1.06  insn per cycle         
                                                  #    0.02  stalled cycles per insn  (42.73%)
       11896415156      branches:u                #  360.245 M/sec                    (42.93%)
          13959592      branch-misses:u           #    0.12% of all branches          (43.48%)
       65231515640      L1-dcache-loads:u         # 1975.326 M/sec                    (42.88%)
        3369362976      L1-dcache-load-misses:u   #    5.17% of all L1-dcache accesses  (41.88%)
   <not supported>      LLC-loads:u                                                 
   <not supported>      LLC-load-misses:u                                           
        1559279007      L1-icache-loads:u         #   47.218 M/sec                    (41.15%)
           4219649      L1-icache-load-misses:u   #    0.27% of all L1-icache accesses  (40.44%)
          54738651      dTLB-loads:u              #    1.658 M/sec                    (39.92%)
          42417310      dTLB-load-misses:u        #   77.49% of all dTLB cache accesses  (39.50%)
           3527635      iTLB-loads:u              #    0.107 M/sec                    (39.08%)
           2790311      iTLB-load-misses:u        #   79.10% of all iTLB cache accesses  (39.02%)
        3212783386      L1-dcache-prefetches:u    #   97.289 M/sec                    (38.68%)
   <not supported>      L1-dcache-prefetch-misses:u                                   

      63.780284951 seconds time elapsed

      74.965216000 seconds user
       6.759015000 seconds sys



Secondary result "blackScholes.TestJavaPerf.testVectorPerformance:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
 50.2%         RUNNABLE
 48.6%         TIMED_WAITING
  1.3%         WAITING

....[Thread state: RUNNABLE]........................................................................
 25.7%  51.2% <stack is empty, everything is filtered?>
 20.3%  40.5% blackScholes.JavaSIMD.calculateD3
  4.0%   8.1% jdk.incubator.vector.DoubleVector.intoArray
  0.1%   0.1% jdk.incubator.vector.DoubleVector.lanewiseTemplate
  0.0%   0.0% blackScholes.TestJavaPerf.testVectorPerformance
  0.0%   0.0% javax.management.ObjectName.construct
  0.0%   0.0% sun.management.MemoryManagerImpl.getName
  0.0%   0.0% blackScholes.jmh_generated.TestJavaPerf_testVectorPerformance_jmhTest.testVectorPerformance_thrpt_jmhStub
  0.0%   0.0% java.util.TreeMap.rotateLeft
  0.0%   0.0% java.util.ComparableTimSort.countRunAndMakeAscending

....[Thread state: TIMED_WAITING]...................................................................
 25.7%  53.0% java.lang.Object.wait
 22.8%  47.0% jdk.internal.misc.Unsafe.park

....[Thread state: WAITING].........................................................................
  1.3% 100.0% jdk.internal.misc.Unsafe.park



# Run complete. Total time: 00:06:21

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                                         (arraySize)   Mode  Cnt          Score          Error      Units
blackScholes.TestJavaPerf.testScalarPerformance                                       2560000  thrpt    6         11.563 ±        0.060      ops/s
blackScholes.TestJavaPerf.testScalarPerformance:·cpi                                  2560000  thrpt               0.394                 clks/insn
blackScholes.TestJavaPerf.testScalarPerformance:·gc.alloc.rate                        2560000  thrpt    6          0.588 ±        0.044     MB/sec
blackScholes.TestJavaPerf.testScalarPerformance:·gc.alloc.rate.norm                   2560000  thrpt    6      56025.655 ±     4217.362       B/op
blackScholes.TestJavaPerf.testScalarPerformance:·gc.count                             2560000  thrpt    6            ≈ 0                    counts
blackScholes.TestJavaPerf.testScalarPerformance:·ipc                                  2560000  thrpt               2.537                 insns/clk
blackScholes.TestJavaPerf.testScalarPerformance:·perf                                 2560000  thrpt                 NaN                       ---
blackScholes.TestJavaPerf.testScalarPerformance:·stack                                2560000  thrpt                 NaN                       ---
blackScholes.TestJavaPerf.testScalarPerformanceNoInline                               2560000  thrpt    6         11.566 ±        0.055      ops/s
blackScholes.TestJavaPerf.testScalarPerformanceNoInline:·cpi                          2560000  thrpt               0.395                 clks/insn
blackScholes.TestJavaPerf.testScalarPerformanceNoInline:·gc.alloc.rate                2560000  thrpt    6          0.589 ±        0.043     MB/sec
blackScholes.TestJavaPerf.testScalarPerformanceNoInline:·gc.alloc.rate.norm           2560000  thrpt    6      56080.000 ±     4205.441       B/op
blackScholes.TestJavaPerf.testScalarPerformanceNoInline:·gc.count                     2560000  thrpt    6            ≈ 0                    counts
blackScholes.TestJavaPerf.testScalarPerformanceNoInline:·ipc                          2560000  thrpt               2.530                 insns/clk
blackScholes.TestJavaPerf.testScalarPerformanceNoInline:·perf                         2560000  thrpt                 NaN                       ---
blackScholes.TestJavaPerf.testScalarPerformanceNoInline:·stack                        2560000  thrpt                 NaN                       ---
blackScholes.TestJavaPerf.testVectorPerformance                                       2560000  thrpt    6          6.589 ±        1.396      ops/s
blackScholes.TestJavaPerf.testVectorPerformance:·cpi                                  2560000  thrpt               0.902                 clks/insn
blackScholes.TestJavaPerf.testVectorPerformance:·gc.alloc.rate                        2560000  thrpt    6       4260.934 ±      903.208     MB/sec
blackScholes.TestJavaPerf.testVectorPerformance:·gc.alloc.rate.norm                   2560000  thrpt    6  711779513.335 ±    15770.168       B/op
blackScholes.TestJavaPerf.testVectorPerformance:·gc.churn.G1_Eden_Space               2560000  thrpt    6       4267.999 ±     1071.900     MB/sec
blackScholes.TestJavaPerf.testVectorPerformance:·gc.churn.G1_Eden_Space.norm          2560000  thrpt    6  712735184.810 ± 81907293.053       B/op
blackScholes.TestJavaPerf.testVectorPerformance:·gc.churn.G1_Survivor_Space           2560000  thrpt    6          0.004 ±        0.012     MB/sec
blackScholes.TestJavaPerf.testVectorPerformance:·gc.churn.G1_Survivor_Space.norm      2560000  thrpt    6        655.911 ±     1939.903       B/op
blackScholes.TestJavaPerf.testVectorPerformance:·gc.count                             2560000  thrpt    6         34.000                    counts
blackScholes.TestJavaPerf.testVectorPerformance:·gc.time                              2560000  thrpt    6         82.000                        ms
blackScholes.TestJavaPerf.testVectorPerformance:·ipc                                  2560000  thrpt               1.109                 insns/clk
blackScholes.TestJavaPerf.testVectorPerformance:·perf                                 2560000  thrpt                 NaN                       ---
blackScholes.TestJavaPerf.testVectorPerformance:·stack                                2560000  thrpt                 NaN                       ---

Benchmark result is saved to /home/shiraj/Projects/performanceTesting/javaPerf/build/results/jmh/results.txt

BUILD SUCCESSFUL in 6m 22s
7 actionable tasks: 1 executed, 6 up-to-date
